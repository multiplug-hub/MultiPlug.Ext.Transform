@model MultiPlug.Base.Http.EdgeApp

@functions
{
    string isConnected(bool theValue)
    {
        return (theValue) ? "<i class=\"icon-ok icon-large\"></i>" : "<i class=\"icon-remove icon-large\"></i>";
    }

    string isEnabled(bool? theValue)
    {
        return (theValue.Value) ? "checked" : "";
    }
}

<form name="StringForm" action="" method="post" accept-charset="utf-8" enctype="application/x-www-form-urlencoded" autocomplete="off">
    <section class="row-fluid">

        <div class="row-fluid">
            <div class="box">
                <div class="span3">
                    <a style="line-height: 52px;" href="#"><img alt="Transform Logo" src="@Raw(Model.Context.Paths.Assets)images/transform.png"></a>
                </div>
                <div class="span6">
                    <p style="font-size:26px; line-height: 54px; text-align: center; margin: 0px;">String</p>
                </div>
                <div class="span3" style="text-align: right;">
                    <a class="btn btn-black" style="height:44px; width:35px" href="@Raw(Model.Context.Paths.Home)strings/"><i class="icon-arrow-left icon-large"></i><p>Back</p></a>
                    <button type="submit" value="submit" style="height:54px; width:65px" class="item btn btn-green"><i class="icon-save icon-large"></i><p>Save</p></button>
                </div>
            </div>
        </div>

        @Include("MultiPlug.Ext.Transform.TransformationsNavigation")

        <input type="hidden" name="Guid" value="@Model.Extension.Model.Guid">

        <div class="row-fluid">

            <div class="box non-collapsible">

                <div class="row-fluid">

                    <div class="span4">
                        <div class="row-fluid"><div class="span12">Event ID</div></div>
                        <div class="row-fluid">
                            <div class="span12">
                                <input name="TransformedEventId" class="input-block-level" type="text" placeholder="Event ID" value="@Model.Extension.Model.TransformedEvent.Id">
                            </div>
                        </div>
                    </div>

                    <div class="span4">
                        <div class="span12">
                            <div class="row-fluid"><div class="span12">Event Description</div></div>
                            <div class="row-fluid"><div class="span12"><input name="TransformedEventDescription" class="input-block-level" type="text" placeholder="Description" value="@Model.Extension.Model.TransformedEvent.Description"></div></div>
                        </div>
                    </div>

                    <div class="span4">
                        <div class="row-fluid"><div class="span12">Event Subject</div></div>
                        <div class="row-fluid">
                            <div class="row-fluid">
                                <div class="span12">
                                    <div class="row-fluid"><div class="span12"><input name="TransformedEventSubject" class="input-block-level" type="text" placeholder="Subject" value="@Model.Extension.Model.TransformedEvent.Subjects[0]"></div></div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="row-fluid">
                    <div class="span2">
                        <div class="row-fluid"><div class="span12">Forward Event Subjects</div></div>
                        <div class="row-fluid">
                            <div class="span12 input-append">
                                <input type="checkbox" name="ForwardEventSubjects" value="true" @Raw(isEnabled(Model.Extension.Model.ForwardEventSubjects))>
                            </div>
                        </div>
                    </div>

                    <div class="span10">
                    </div>
                </div>
            </div>

            <div class="row-fluid">
                <div class="span12">
                    <h3 class="box-header">
                        Sequence Steps
                    </h3>
                    <div class="box">
                        <div class="row-fluid">
                            <div class="span12">
                                <ul id="Steps" style="list-style: none;">
                                    @foreach (var Step in @Model.Extension.Model.Steps)
                                    {
                                        @Raw(MultiPlug.Ext.Transform.Controllers.Settings.Strings.ActionCreator.NewStep(Step.Action, Step.Arg1, Step.Arg2))
                                    }
                                </ul>
                                <ul style="list-style: none;">
                                    <li>
                                        <div class="row-fluid">
                                            <div class="span2">
                                            </div>
                                            <div class="span4">
                                                <select id="NewStepActionSelected" class="input-block-level">
                                                    <option value="">Add New Step</option>
                                                    @Raw(MultiPlug.Ext.Transform.Controllers.Settings.Strings.ActionCreator.CreateList())
                                                </select>
                                            </div>
                                            <div class="span3">
                                            </div>
                                            <div class="span3">
                                            </div>
                                        </div>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row-fluid">

                <div class="span6">
                    @* Left Hand Column*@

                    <h3 class="box-header">
                        Subscriptions
                    </h3>
                    <div class="box">
                        <div class="row-fluid">
                        </div>
                        <ul id="Subscriptions" style="list-style: none;">
                            @foreach (var Subscription in @Model.Extension.Model.Subscriptions)
                            {
                                <li>
                                    <div class="control-group">
                                        <div class="controls">
                                            <div class="span2">
                                                <button value="@Subscription.Guid" type="button" class="item btn btn-red delete-sub"><i class="icon-trash icon-large"></i></button>
                                            </div>
                                            <div class="span9">
                                                <input name="SubscriptionGuid" type="hidden" value="@Subscription.Guid">
                                                <input name="SubscriptionId" type="text" value="@Subscription.Id" class="input-block-level mp-event-picker">
                                            </div>
                                            <div class="span1">
                                                @Raw(isConnected(Subscription.Connected))
                                            </div>
                                        </div>
                                    </div>
                                </li>
                            }
                        </ul>
                        <ul style="list-style: none;">
                            <li>
                                <div class="control-group">
                                    <div class="controls">
                                        <div class="span2">
                                            <button type="button" id="NewSubscription" class="btn btn-green"><i class="icon-plus icon-large"></i></button>
                                        </div>
                                        <div class="span10">
                                        </div>
                                    </div>
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>

                <div class="span6">
                    @* Right Hand Column*@
                </div>
            </div>
        </div>
    </section>
</form>

<script>
    function newSubElement() {
        return '<li>\
            <div class="control-group">\
                <div class="controls">\
                    <div class="span2">\
                    </div>\
                    <div class="span9">\
                        <input name="SubscriptionGuid" type="hidden" value="">\
                        <input name="SubscriptionId" type="text" value="" class="input-block-level mp-event-picker">\
                    </div>\
                    <div class="span1">\
                        <i class=\"icon-remove icon-large\"></i>\
                    </div>\
                </div>\
            </div>\
        </li>';
    }

    function newStep(theNewAction) {
        return '<li>\
            <input name="StepAction" type="hidden" value="'+ theNewAction +'">\
            <input name="StepArg1" type="hidden" value="">\
            <input name="StepArg2" type="hidden" value="">\
        </li>';
    }

    function ApplyDelete(theSelector) {
        $(theSelector).on('click', '.delete-sub', function () {
            var id = $(this).attr('value');
            var closestli = $(this).closest("li");

            $.ajax({
                type: "POST",
                url: '@Raw(Model.Context.Paths.Current)delete/?id=@Model.Extension.Model.Guid&subid=' + id,
                success: function () {
                    closestli.remove();
                }
            });
        });
    }

    $('#NewSubscription').on('click', function () {
        $('#Subscriptions').append(newSubElement());
        var NewAggregateSubscription = $('#Subscriptions li:last-child');
        applyMPEventPickerOnClick();
        ApplyDelete(NewAggregateSubscription.find(':button'));
    });


    $('#NewStepActionSelected').change(function () {
        if ($(this).val() != "") {
            $('#Steps').append(newStep($(this).val()));
            document.forms["StringForm"].submit();
        }
    });

    $('.action-list').change(function () {
        document.forms["StringForm"].submit();
    });

    function ApplyStepDelete(theSelector) {
        $(theSelector).on('click', '.delete-step', function () {
            $(this).closest("li").remove();;
            document.forms["StringForm"].submit();
        });
    }

    ApplyDelete(document);
    ApplyStepDelete(document);
</script>
