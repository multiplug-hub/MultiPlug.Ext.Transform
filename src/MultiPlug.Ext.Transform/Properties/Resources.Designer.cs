//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MultiPlug.Ext.Transform.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MultiPlug.Ext.Transform.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///
        ///&lt;section class=&quot;row-fluid&quot;&gt;
        ///
        ///    &lt;div class=&quot;row-fluid&quot;&gt;
        ///        &lt;div class=&quot;box&quot;&gt;
        ///            &lt;div class=&quot;span3&quot;&gt;
        ///                &lt;a style=&quot;line-height: 52px;&quot; href=&quot;#&quot;&gt;&lt;img alt=&quot;Transform Logo&quot; src=&quot;@Raw(Model.Context.Paths.Assets)images/transform.png&quot;&gt;&lt;/a&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;span6&quot;&gt;
        ///                &lt;p style=&quot;font-size:26px; line-height: 54px; text-align: center; margin: 0px;&quot;&gt;About&lt;/p&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;span3 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string About {
            get {
                return ResourceManager.GetString("About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;
        ///  &lt;xsl:template match=&quot;/&quot;&gt;
        ///    &lt;!-- 3 Ways to Select a Subject Value
        ///      1. By it&apos;s Name
        ///      Subject Value: &lt;xsl:value-of select=&quot;root/subjects/update&quot;/&gt;
        ///      
        ///      2. By it&apos;s Index Value
        ///      Subject Value: &lt;xsl:value-of select=&quot;root/index/item0&quot;/&gt;
        ///    
        ///      3. Using the Array
        ///      &lt;xsl:for-each select=&quot;root/array&quot;&gt;
        ///        Subject Value:  &lt;xsl:value-of select=&quot;.&quot; /&gt;
        ///      &lt;/xsl:for-e [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DefaultXSLT {
            get {
                return ResourceManager.GetString("DefaultXSLT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///
        ///&lt;section class=&quot;row-fluid&quot;&gt;
        ///
        ///    &lt;div class=&quot;row-fluid&quot;&gt;
        ///        &lt;div class=&quot;box&quot;&gt;
        ///            &lt;div class=&quot;span5&quot;&gt;
        ///                &lt;a href=&quot;/&quot;&gt;&lt;img alt=&quot;Ports Icon&quot; src=&quot;@Raw(Model.Context.Paths.Assets)images/transform.png&quot;&gt;&lt;/a&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;span2&quot;&gt;
        ///                &lt;p style=&quot;font-size:22.75px; padding-top:10px;&quot;&gt;Transformations&lt;/p&gt;
        ///            &lt;/div&gt;
        ///        &lt;/div&gt;
        ///    &lt;/div&gt;
        ///
        ///    &lt;div class=&quot;row-fluid&quot;&gt;
        ///        &lt;div class=&quot;bo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Home {
            get {
                return ResourceManager.GetString("Home", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///@functions {
        ///    public string NavLocationIsHome()
        ///    {
        ///        return Model.Context.Paths.Current == Model.Context.Paths.Home ? &quot;active&quot; : string.Empty;
        ///    }
        ///
        ///    public string NavLocationIsLane()
        ///    {
        ///        return Model.Context.Paths.Current == Model.Context.Paths.Home + &quot;lane/&quot; ? &quot;active&quot; : string.Empty;
        ///    }
        ///
        ///    public string NavLocationIsSetup()
        ///    {
        ///        return Model.Context.Paths.Current.StartsWith(Model.Context.Paths.Home + &quot;lane/setup/&quot;) ? [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Navigation {
            get {
                return ResourceManager.GetString("Navigation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///
        ///@functions
        ///{
        ///    string isEnabled(bool theValue)
        ///    {
        ///        return (theValue) ? &quot;checked&quot; : &quot;&quot;;
        ///    }
        ///
        ///    string isConnected(bool theValue)
        ///    {
        ///        return (theValue) ? &quot;&lt;i class=\&quot;icon-ok icon-large\&quot;&gt;&lt;/i&gt;&quot; : &quot;&lt;i class=\&quot;icon-remove icon-large\&quot;&gt;&lt;/i&gt;&quot;;
        ///    }
        ///}
        ///
        ///&lt;form action=&quot;&quot; method=&quot;post&quot; accept-charset=&quot;utf-8&quot; enctype=&quot;application/x-www-form-urlencoded&quot; autocomplete=&quot;off&quot;&gt;
        ///    &lt;section class=&quot;row-fluid&quot;&gt;
        ///
        ///        &lt;div class=&quot;row-fluid&quot;&gt;
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RegularExpression {
            get {
                return ResourceManager.GetString("RegularExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///
        ///&lt;section class=&quot;row-fluid&quot;&gt;
        ///
        ///    &lt;div class=&quot;row-fluid&quot;&gt;
        ///        &lt;div class=&quot;box&quot;&gt;
        ///            &lt;div class=&quot;span3&quot;&gt;
        ///                &lt;a style=&quot;line-height: 52px;&quot; href=&quot;#&quot;&gt;&lt;img alt=&quot;Transform Logo&quot; src=&quot;@Raw(Model.Context.Paths.Assets)images/transform.png&quot;&gt;&lt;/a&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;span6&quot;&gt;
        ///                &lt;p style=&quot;font-size:26px; line-height: 54px; text-align: center; margin: 0px;&quot;&gt;Regular Expressions&lt;/p&gt;
        ///            &lt;/div&gt;
        ///            &lt;di [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RegularExpressions {
            get {
                return ResourceManager.GetString("RegularExpressions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///
        ///@functions
        ///{
        ///    string isConnected(bool theValue)
        ///    {
        ///        return (theValue) ? &quot;&lt;i class=\&quot;icon-ok icon-large\&quot;&gt;&lt;/i&gt;&quot; : &quot;&lt;i class=\&quot;icon-remove icon-large\&quot;&gt;&lt;/i&gt;&quot;;
        ///    }
        ///}
        ///
        ///&lt;form name=&quot;StringForm&quot; action=&quot;&quot; method=&quot;post&quot; accept-charset=&quot;utf-8&quot; enctype=&quot;application/x-www-form-urlencoded&quot; autocomplete=&quot;off&quot;&gt;
        ///    &lt;section class=&quot;row-fluid&quot;&gt;
        ///
        ///        &lt;div class=&quot;row-fluid&quot;&gt;
        ///            &lt;div class=&quot;box&quot;&gt;
        ///                &lt;div class=&quot;span3&quot;&gt;
        ///                [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string String {
            get {
                return ResourceManager.GetString("String", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///
        ///&lt;section class=&quot;row-fluid&quot;&gt;
        ///
        ///    &lt;div class=&quot;row-fluid&quot;&gt;
        ///        &lt;div class=&quot;box&quot;&gt;
        ///            &lt;div class=&quot;span3&quot;&gt;
        ///                &lt;a style=&quot;line-height: 52px;&quot; href=&quot;#&quot;&gt;&lt;img alt=&quot;Transform Logo&quot; src=&quot;@Raw(Model.Context.Paths.Assets)images/transform.png&quot;&gt;&lt;/a&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;span6&quot;&gt;
        ///                &lt;p style=&quot;font-size:26px; line-height: 54px; text-align: center; margin: 0px;&quot;&gt;Strings&lt;/p&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;spa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Strings {
            get {
                return ResourceManager.GetString("Strings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap transform {
            get {
                object obj = ResourceManager.GetObject("transform", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///
        ///@functions
        ///{
        ///    string isEnabled(bool? theValue)
        ///    {
        ///        return (theValue.Value) ? &quot;checked&quot; : &quot;&quot;;
        ///    }
        ///
        ///    string isConnected(bool theValue)
        ///    {
        ///        return (theValue) ? &quot;&lt;i class=\&quot;icon-ok icon-large\&quot;&gt;&lt;/i&gt;&quot; : &quot;&lt;i class=\&quot;icon-remove icon-large\&quot;&gt;&lt;/i&gt;&quot;;
        ///    }
        ///}
        ///
        ///&lt;form action=&quot;&quot; method=&quot;post&quot; accept-charset=&quot;utf-8&quot; enctype=&quot;application/x-www-form-urlencoded&quot; autocomplete=&quot;off&quot;&gt;
        ///    &lt;section class=&quot;row-fluid&quot;&gt;
        ///
        ///        &lt;div class=&quot;row-fluid [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string XSLT {
            get {
                return ResourceManager.GetString("XSLT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///
        ///&lt;section class=&quot;row-fluid&quot;&gt;
        ///
        ///    &lt;div class=&quot;row-fluid&quot;&gt;
        ///        &lt;div class=&quot;box&quot;&gt;
        ///            &lt;div class=&quot;span3&quot;&gt;
        ///                &lt;a style=&quot;line-height: 52px;&quot; href=&quot;#&quot;&gt;&lt;img alt=&quot;Transform Logo&quot; src=&quot;@Raw(Model.Context.Paths.Assets)images/transform.png&quot;&gt;&lt;/a&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;span6&quot;&gt;
        ///                &lt;p style=&quot;font-size:26px; line-height: 54px; text-align: center; margin: 0px;&quot;&gt;XSLTs&lt;/p&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;span3 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string XSLTs {
            get {
                return ResourceManager.GetString("XSLTs", resourceCulture);
            }
        }
    }
}
